/* Tecnico em Desenvolvimento de Sistemas
Projeto Final: Implementacao de Banco de Dados Relacional com MySQL
Projeto - Clinica Odontologica OdontoVida*/

-- 1. Criacao do Arquivo/Banco de Dados
Create database OdontoVida;
-- 2. Acessando Arquivo/Banco de Dados 
use OdontoVida;


CREATE TABLE Tratamento( 
tratamento_id INT AUTO_INCREMENT PRIMARY KEY,
consulta_id INT,
descricao TEXT,
data_inicio DATE,
data_fim DATE,
FOREIGN KEY (consulta_id) REFERENCES consulta (consulta_id)
);
CREATE TABLE Procedimento(
procedimento_id INT AUTO_INCREMENT PRIMARY KEY,
nome VACHAR (100) NOT NULL,
custo DECIMAL (10, 2) NOT NULL
);
CREATE TABLE Tratamento_Procedimento(
Tratamento_id INT,
procedimento_id INT,
quantidade INT DEFAULT 1,
PRIMARY KEY (tratamento id, procedimento_id),
FOREIGN KEY (tratamento id) REFERENCES Tratamento (tratamento_id), 
FOREIGN KEY (procedimento_id) REFERENCES Procedimento (procedimento_id)
);
CREATE TABLE Pagamento ( 
pagamento id INT AUTO INCREMENT PRIMARY KEY,
tratamento id INT,
Valor DECIMAL (10, 2) NOT NULL
data_pagamento DATE,
FOREIGN KEY (tratamento_id) REFERENCES Tratamento (tratamento_id)
);

INSERT INTO Consulta (paciente_id, dentista_id, data_consulta) VALUES 
 (1, 1, '2024-09-18 10:00:00'),
(2, 2, '2024-09-11 11:00:00), 
(3, 3, '2024-09-12 09:00:00"), 
(4, 4, '2024-09-13 14:00:00'), 
(5, 5, '2024-09-14 15:00:00), 
(6, 6, '2024-09-15 08:00:00), 
(7, 7, '2024-09-16 13:00:00"), 
(8, 8, '2024-09-17 16:00:00'), 
(9, 9, '2024-09-18 12:00:00),
(10, 10, '2024-09-19 17:00:00');

INSERT INTO Tratamento (consulta_id, descricao, data_inicio, data_fim) VALUES
(1, 'Limpeza e Polimento', '2024-09-10', '2024-09-10'),
(2, 'Tratamento de Canal', '2024-09-11', '2024-09-25′),
(3, 'Aplicação de Flúor', '2024-09-12', '2024-09-12'),
(4, 'Extração de Dente', '2024-09-13', '2024-09-13'),
(5, 'Colocação de Aparelho', '2024-09-14', '2024-12-14'),
(6, 'Implante Dentário', '2024-09-15', '2024-10-15'), 
(7) 'Clareamento Dental', '2024-09-16', '2024-09-16'),
(8, 'Proótese Parcial', '2024-09-17', '2024-10-17'),
(9, 'Tratamento de Gengiva', '2024-09-18', '2024-09-25'),
(10, 'Reparo de Prótese', '2024-09-19', '2024-09-19');

INSERT INTO Tratamento_Procedimento (tratamento_id, procedimento_id, quantidade) VALUES 
(1, 1, 1),
(2, 2, 1),
(3, 3, 1), 
(4, 4, 1),
(5, 5, 1),
(6, 6, 1), 
(7, 7, 1),
(8, 8, 1), 
(9, 9, 1),
(10, 10, 1);

INSERT INTO Pagamento (tratamento id, valor, data pagamento) VALUES
(1, 150.80, '2024-09-10'),
(2, 800.00, '2024-09-25'),
(3,100.00 '2024-09-12'),
(4, 200,00, '2024-09-13'),
(5, 1500.00, '2024-12-14'), 
(6, 2000.00, '2024-10-15'), 
(7.500.00. '2024-09-16'),
(8, 1200-00, '2024-10-17'),
(9,300,00, '2024-09-25'), 
(10, 250.00, '2024-09-19');

/*
Esta consulta mostra todos os tratamentos realizados, junto com os procedimentos associados a cada tratamento e o custo total de cada procedimento. 
*/
SELECT 
t.tratamento_id,
t.descricao AS tratamento_descricao,
p.nome AS procedimento_nome,
tp.quantidade,
pr.custo,
(tp.quantidade * pr.custo) AS custo_total 
FROM 
Tratamento t 
INNER JOIN
Tratamento_Procedimento tp ON t.tratamento_id = tp.tratamento_id 
INNER JOIN 
Procedimento pr ON tp.procedimento_id = pr.procedimento_id;

/* 
Sempre que um novo procedimento é inserido na tabela Tratamento_Procedimento, a trigger atualizará o custo total do tratamento correspondente na tabela Tratamento.
*/
DELIMITER // 
CREATE TRIGGER AtualizarCustoTratamento
AFTER INSERT ON Tratamento_Procedimento 
FOR EACH ROW 
BEGIN 
DECLARE custo_total DECIMAL(10, 2); 

-- Calcula o custo total do tratamento
SELECT SUM(tp.quantidade * p.custo) INTO custo_total
FROM Tratamento_Procedimento tp 
JOIN Procedimento p ON tp.procedimento_id = p.procedimento_id 
WHERE tp.tratamento_id = NEW.tratamento_id;

-- Atualiza o valor total do tratamento na tabela Tratamento 
UPDATE Tratamento
SET valor_total = custo_total
WHERE tratamento_id = NEW.tratamento_id; 
END// 
DELIMITER;

